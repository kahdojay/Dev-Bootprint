var nameArray = []
var cohortArray = []
var companyArray = []
var markersArray = [];
var infoBoxes = [];
var markerCluster = null;

var initializeMap = function() {
  var startLatlng = new google.maps.LatLng(38.0984323,-93.6047106);
  var mapOptions = {
    zoom: 5,
    minZoom: 3,
    center: startLatlng
  };
  window.map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
}

var populateGraduates = function(graduates) {
  $("#grad-container").empty();
  infoBoxes = []

  graduates.forEach(function(graduate) {
    if (graduate.display === true) {
      nameArray.push(graduate.name)
      cohortArray.indexOf(graduate.cohort_name) === -1 ? cohortArray.push(graduate.cohort_name) : ""
      companyArray.indexOf(graduate.company) === -1 ? companyArray.push(graduate.company) : ""
    }

    var contentString = "<div class='grad-panel'>";
    if (graduate.img_url) {
      contentString += "<img class='grad-pic' src=" + graduate.img_url + ">";
    } else {
      contentString += "<img class='grad-pic' src='<%= asset_path('avatar.png') %>'>";
    }
    contentString += "<div class='grad-content'><p class='grad-name'>" + graduate.name

    if (graduate.linked_in) {
      contentString += "<br><a class='linked-in' href=";
      contentString += graduate.linked_in.replace(/\/$/,'');
      contentString += "> (LinkedIn)</a>";
    }

    contentString += "</p>"

    if (graduate.city && graduate.city !== "city unknown") {
      contentString += "<p class='grad-city'>";
      contentString += graduate.city.replace(/Greater|Area|City/g,'').trim();
      contentString += "</p>";
    }

    // TODO: make state show as appropriate
    // if (graduate.city && graduate.city !== graduate.state_or_country) {
    //   contentString
    // }

    if (graduate.company !== "company unknown") {
      contentString += "<p class='grad-company'>";
      contentString += graduate.company;
      contentString += "</p>";
    }

    contentString += "</div></div>";

    var latitude_longitude = new google.maps.LatLng((parseFloat(graduate.lat)), (parseFloat(graduate.long)))
    var marker = new google.maps.Marker({
      position: latitude_longitude,
      map: window.map
    })
    var infoWindow = new google.maps.InfoWindow({
        content: contentString,
        maxWidth: 500
    })

    $("#grad-container").append("<div class='grad-panel-wrapper'>" + contentString + "</div>");
    var $gradPanel = $("#grad-container").children().last()

    if (graduate.lat !== "unknown") {
      $gradPanel.on('click', function() {
        infoBoxes.forEach(function(infoBox) {
          infoBox.close();
        })
        infoWindow.open(window.map, marker);
        map.panTo(marker.getPosition());
        map.setZoom(15);
      })
    }
    markersArray.push(marker);
    infoBoxes.push(infoWindow);
    google.maps.event.addListener(marker, 'mouseover', function() {
      infoBoxes.forEach(function(infoBox) {
        infoBox.close();
      })
      infoWindow.open(window.map, marker);
    });
    google.maps.event.addListener(marker, 'mouseout', function() {
      window.setTimeout(function() { infoWindow.close() }, 3000)
    });
    google.maps.event.addListener(marker, 'click', function() {
      $("#grad-container").scrollTop(0)
      $("#grad-container").animate({
        scrollTop: $gradPanel.offset().top - 225
      })
    });
  })
}

var setAllMap = function(map) {
  for (var i = 0; i < markersArray.length; i++) {
    markersArray[i].setMap(map);
  }
}

var clearMarkers = function() {
  markerCluster.clearMarkers();
  setAllMap(null);
  markersArray = [];
}


var populateMarkers = function(filter, input) {
  var searchInputs = {
    type: "GET",
    url: "/graduates",
  }

  if (filter && input) {
    searchInputs.data = {
      filter: filter.replace(/^\s+|\s+$/g, ''),
      input: input.replace(/^\s+|\s+$/g, '')
    }
  }


  $.ajax(searchInputs).done(function(response) {
    console.log("Response length is " + Object.keys(response).length)
    populateGraduates(response);
  }).done(function() {
    markerCluster = new MarkerClusterer(map, markersArray);
    markerCluster.setMaxZoom(12)
  })
}

var initializeSearch = function() {
  var substringMatcher = function(strs) {
    return function findMatches(q, cb) {
      var matches, substrRegex;
      matches = [];
      substrRegex = new RegExp(q, 'i');
      $.each(strs, function(i, str) {
        if (substrRegex.test(str)) {
          matches.push({ value: str });
        }
      });
      cb(matches);
    };
  };

  var setTypeAhead = function(suggestions) {
    $('.typeahead').typeahead('destroy')
    $('.typeahead').typeahead({
      hint: true,
      highlight: true,
      minLength: 1
    },
    {
      displayKey: 'value',
      source: substringMatcher(suggestions)
    });
  }

  setTypeAhead(nameArray)

  var searchFilter = "name"

  $("#ddrp1").on("change", function() {
    searchFilter = $(this).find(':selected').val();
    if (searchFilter === "name") {
      setTypeAhead(nameArray)
    }
    else if (searchFilter === "company") {
      setTypeAhead(companyArray)
    }
    else if (searchFilter === "cohort") {
      setTypeAhead(cohortArray)
    }
  })

  $('.typeahead').bind('typeahead:selected', function(obj, datum, name) {
    var input = $(event.target).parent()[0].innerText
    $("#grad-container").empty();
    clearMarkers();
    populateMarkers(searchFilter, input);
  });
}

$(document).ready(function(){
  initializeMap();
  populateMarkers();
  initializeSearch();
})